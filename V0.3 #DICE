print("Welcome sir")
import pygame
import sys
import os
from time import *
from Assets import *
from pygame.locals import *
import webbrowser
import random
#window size
pygame.init()
width = 1100
height = 600
size = ((width,height))
screen = pygame.display.set_mode(size)
white = (255,255,255)
black = (0,0,0)
red = (255,0,0)
blue = (20,66,122)
offset = 50
board_size = 10
pygame.display.set_caption('Survivor')
boardgame = pygame.image.load ("TheBoard.png")
gameDisplay = pygame.display.set_mode(size)
Player1 = pygame.image.load("BoksHandschoen3.png")
Player2 = pygame.image.load("BoksHandschoen.png")
Player3 = pygame.image.load("BoksHandschoen4.png")
Player4 = pygame.image.load("BoksHandschoen2.png")
for event in pygame.event.get():
    if event.type == MOUSEMOTION:
        mousex, mousey = pygame.mouse.get_pos()

#assets
Wallpaper = pygame.image.load("WallpaperW.png")
Quitbutton = pygame.image.load("QuitButton.png")
Quitb = pygame.image.load("QuitButton.png")
Quitbutton2 = pygame.image.load("QuitButton2.png")
Startbutton = pygame.image.load("StartButton.png")
Startb = pygame.image.load("StartButton.png")
Startbutton2 = pygame.image.load("StartButton2.png")
Manualbutton = pygame.image.load("ManualButton.png")
Manualb = pygame.image.load("ManualButton.png")
Manualbutton2 = pygame.image.load("ManualButton2.png")
ExitMessage = pygame.image.load("QuitMenu.png")
Yesbutton = pygame.image.load("YesButton.png")
Yesbutton2 = pygame.image.load("YesButton2.png")
Yesb = pygame.image.load("YesButton.png")
Nobutton = pygame.image.load("NoButton.png")
NoButton2 = pygame.image.load("NoButton2.png")
Nob = pygame.image.load("NoButton.png")
Dice = [pygame.image.load("Dice1.png"),pygame.image.load("Dice2.png"),pygame.image.load("Dice3.png"),pygame.image.load("Dice4.png"),pygame.image.load("Dice5.png"),pygame.image.load("Dice6.png")]
crashed = False
gameExit = False




clock = pygame.time.Clock()
time = clock

#class voor het printen van de afbeeldingen ( buttons)
class Image():
    def __init__(self,image, x):
        self.Image = image
        self.pos = x
        screen.blit(image,(x))


#player locations
def CornerTile(x,y):
    x = (0)
    y = (0)
    gameDisplay.blit(boardgame,(x,y))

def Player1Glove(l1):
    x = l1.Position_X 
    y = l1.Position_Y
    gameDisplay.blit(Player1,(x,y))

def Player2Glove(l2):
    x = l2.Position_X + 10
    y = l2.Position_Y
    gameDisplay.blit(Player2,(x,y))

def Player3Glove(l3):
    x = l3.Position_X + 20
    y = l3.Position_Y
    gameDisplay.blit(Player3,(x,y))
def Player4Glove(l4):
    x = l4.Position_X + 30
    y = l4.Position_Y
    gameDisplay.blit(Player4,(x,y))

#MAINMENU
def MainMenu(crash,Exit,ManualButton, QuitButton,StartButton,event,mousex,mousey):
    #Music
    pygame.mixer.init()
    pygame.mixer.music.load("SONG.mp3",)
    #pygame.mixer.music.load("SONG.mp3") 
    pygame.mixer.music.play(-1)
    crash = False
    xys = ((width * 0.5),(height * 0.10)) 
    xym = ((width * 0.5),(height * 0.4))
    xyq = ((width * 0.5),(height * 0.7)) 
    xyw = ((width * 0),(height * 0)) 
    xyl = ((width * 0.8),(height * 0.8))
    xye = ((width * 0.3),(height * 0.3))
    xyy = ((width * 0.51),(height * 0.52))
    xyn = ((width * 0.32),(height * 0.52))
    
    while not crash:
        for event in pygame.event.get():
            if event.type == MOUSEMOTION:
                mousex, mousey = pygame.mouse.get_pos()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    crash = True
            if event.type == pygame.QUIT:
                crash = True
            elif event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:
                crash = True
        else:
            if crash == False:
                wall= Image(Wallpaper,(xyw))
                Quit= Image(Quitbutton,(xyq))
                Startl= Image(Startbutton,(xys))
                Manual= Image(Manualbutton,(xym))

                #MOUSE HOOVER
                if event.type == MOUSEMOTION and mousex > 550 and mousex < 950  and mousey > 60 and mousey < 210:
                        Start1 = Image(Startbutton2, (xys))
              
                if event.type == MOUSEMOTION and mousex > 550 and mousex < 950  and mousey > 240 and mousey < 390:
                        Manual = Image(Manualbutton2, (xym))
                
                if event.type == MOUSEMOTION and mousex > 550 and mousex < 950  and mousey > 420 and mousey < 570:
                        Quit = Image(Quitbutton2, (xyq))
                

                #KNOP INTERACTIE 
                if event.type == MOUSEBUTTONUP and mousex > 550 and mousex < 950  and mousey > 60 and mousey < 210:
                    Exit = False 
                    BoardGame(PlayerList1,PlayerList2,PlayerList3,PlayerList4,Exit,crash)
                    print("Starting game...")       #fight
                if event.type == MOUSEBUTTONUP and mousex > 550 and mousex < 950  and mousey > 240 and mousey < 390:
                    webbrowser.open_new("Manual.pdf")
                    print("Opening Manual...")      #Manual
                    
                if event.type == MOUSEBUTTONUP and mousex > 550 and mousex < 950  and mousey > 420 and mousey < 570:
                    MainMenu2(crash,Exit,ManualButton, QuitButton,StartButton,event,mousex,mousey,Nobutton,Yesbutton)
                    #pygame.quit()
                    #quit()
                        
        pygame.display.update()
    clock.tick(60)



def BoardGame(l1,l2,l3,l4,Exit,crash):
    pygame.mixer.init()
    pygame.mixer.music.load("GameMusic.mp3",)
    pygame.mixer.music.play(-1)
    P1 = True
    P2 = False
    P3 = False
    P4 = False
    pygame.display.set_mode(size)
    getTicksLastFrame = 0;
    Exit = False
    outcome = 0;
    diceDisplay = 0.0
    rolledDice = False
    pygame.display.set_caption('Survivor')
    while not Exit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                Exit = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    MainMenu(crash,Exit,Manualbutton, Quitbutton,Startbutton,event,mousex,mousey)


                if P1 == True and event.key == pygame.K_1:
                    if l1.Name == "Pos6":
                        Player1Class.Jet_Ri()
                    print (event)
                    l1 = l1.tail
                    P1 = False
                    P2 = True
                elif P2 == True and event.key == pygame.K_2:
                    print (event)
                    l2 = l2.tail
                    P2 = False
                    P3 = True
                elif P3 == True and event.key == pygame.K_3:
                    print (event)
                    l3 = l3.tail
                    P3 = False
                    P4 = True
                elif P4 == True and event.key == pygame.K_4:
                    print (event)
                    l4 = l4.tail
                    P4 = False
                    P1 = True
                if event.key == pygame.K_9 and (0.0 >= diceDisplay):
                    outcome = RollDice();
                    rolledDice = True;
                    diceDisplay = 5.0;
        if(rolledDice) and P2 == True:
            for x in range(0,outcome):
                if l1.Name == "Pos41":
                    l1 = PlayerPosList1
                l1 = l1.tail;
        elif(rolledDice) and P3 == True:
            for x in range(0,outcome):
                if l2.Name == "Pos11":
                    l2 = PlayerPosList2
                l2 = l2.tail;
        elif(rolledDice) and P4 == True:
            for x in range(0,outcome):
                if l3.Name == "Pos21":
                    l3 = PlayerPosList3
                l3 = l3.tail;
        elif(rolledDice) and P1 == True:
            for x in range(0,outcome):
                if l4.Name == "Pos31":
                    l4 = PlayerPosList4
                l4 = l4.tail;
        gameDisplay.fill(blue)
        CornerTile(0,0)
        Player1Glove(l1)
        Player2Glove(l2)
        Player3Glove(l3)
        Player4Glove(l4)
        myfont = pygame.font.SysFont("comic sans MS", 20)
        Player1Class.Levenspunten = str(Player1Class.Levenspunten)
        Player2Class.Levenspunten = str(Player2Class.Levenspunten)
        Player3Class.Levenspunten = str(Player3Class.Levenspunten)
        Player4Class.Levenspunten = str(Player4Class.Levenspunten)
        This1 = Player1Class.Levenspunten
        This2 = Player2Class.Levenspunten
        This3 = Player3Class.Levenspunten
        This4 = Player4Class.Levenspunten
        NameThis1 = str(Player1Class.Name)
        NameThis2 = str(Player2Class.Name)
        NameThis3 = str(Player3Class.Name)
        NameThis4 = str(Player4Class.Name)
        Levenspunten1 = myfont.render(This1, 1, (white))
        Levenspunten2 = myfont.render(This2, 1, (white))
        Levenspunten3 = myfont.render(This3, 1, (white))
        Levenspunten4 = myfont.render(This4, 1, (white))
        PlayerName1 = myfont.render(NameThis1, 1, (white))
        PlayerName2 = myfont.render(NameThis2, 1, (white))
        PlayerName3 = myfont.render(NameThis3, 1, (white))
        PlayerName4 = myfont.render(NameThis4, 1, (white))
        Player1Class.Levenspunten = int(Player1Class.Levenspunten)
        Player2Class.Levenspunten = int(Player2Class.Levenspunten)
        Player3Class.Levenspunten = int(Player3Class.Levenspunten)
        Player4Class.Levenspunten = int(Player4Class.Levenspunten)
        screen.blit(Levenspunten1, (870, 350))
        screen.blit(Levenspunten2, (870, 400))
        screen.blit(Levenspunten3, (870, 450))
        screen.blit(Levenspunten4, (870, 500))
        screen.blit(PlayerName1, (840, 320))
        screen.blit(PlayerName2, (840, 370))
        screen.blit(PlayerName3, (840, 420))
        screen.blit(PlayerName4, (840, 470))
        ticks = pygame.time.get_ticks()
        deltaTime = (ticks - getTicksLastFrame) / 1000.0
        getTicksLastFrame = ticks
        if(0.0 < diceDisplay):
            screen.blit(Dice[outcome-1],(800,100));
        rolledDice = False;
        diceDisplay -= deltaTime;
        pygame.display.update()

def RollDice():
   return random.randint(1,6)
def MainMenu2(crash,Exit,ManualButton, QuitButton,StartButton,event,mousex,mousey,NoButton,YesButton):
    crash = False
    xys = ((width * 0.5),(height * 0.10)) 
    xym = ((width * 0.5),(height * 0.4))
    xyq = ((width * 0.5),(height * 0.7)) 
    xyw = ((width * 0),(height * 0)) 
    xyl = ((width * 0.8),(height * 0.8))
    xye = ((width * 0.3),(height * 0.3))
    xyy = ((width * 0.51),(height * 0.52))
    xyn = ((width * 0.32),(height * 0.52))

    while not crash:
        for event in pygame.event.get():
            if event.type == MOUSEMOTION:
                mousex, mousey = pygame.mouse.get_pos()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_ESCAPE:
                    crash = True
            if event.type == pygame.QUIT:
                crash = True
            elif event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:
                crash = True
        else:
            if crash == False:
                wall= Image(Wallpaper,(xyw))
                Quit= Image(Quitbutton,(xyq))
                Startl= Image(Startbutton,(xys))
                Manual= Image(Manualbutton,(xym))
                ExitMenu = Image(ExitMessage,(xye))
                Yes = Image(Yesbutton,(xyy))
                No = Image(Nobutton,(xyn))

                #exit hoover
                if event.type == MOUSEMOTION and mousex > 352 and mousex < 552  and mousey > 312 and mousey < 421:
                        screen.blit(pygame.image.load("Nobutton2.png"),(xyn))
                else:
                        NoButton = Nob
                if event.type == MOUSEMOTION and mousex > 561 and mousex < 752  and mousey > 312 and mousey < 421:
                        screen.blit(pygame.image.load("Yesbutton2.png"),(xyy))
                else:
                        YesButton = Yesb
                    
                #ExitMenu interactie
                if event.type == MOUSEBUTTONUP and mousex > 352 and mousex < 552  and mousey > 312 and mousey < 421:
                    MainMenu(crash,Exit,ManualButton, QuitButton,StartButton,event,mousex,mousey) #no
                if event.type == MOUSEBUTTONUP and mousex > 561 and mousex < 752  and mousey > 312 and mousey < 421:
                    pygame.quit() #yes
                    quit()
                    
                        
        pygame.display.update()
    clock.tick(60)


# Aanroepencode
MainMenu(crashed,gameExit,Manualbutton, Quitbutton,Startbutton,event,mousex,mousey)
pygame.quit()
quit()
